package com.koreait.core2.controller.request;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class RequestParamController {

	@RequestMapping("/request-param-v1")
	public void requestParamV1(HttpServletRequest request, HttpServletResponse response) throws IOException {
		String username = request.getParameter("username");
		int age = Integer.parseInt(request.getParameter("age"));
		
		System.out.println("username : " + username);
		System.out.println("age : " + age);
		
		response.getWriter().write("ok");
		// 리턴타입이 없으면 뷰단 조회를 하지 않겠다.
	}
	
	/*
	 *  @ResponseBody
	 *  - view 조회를 무시하고, Http message body에 직접 해당 내용 입력
	 *  ------------------------------------------------------
	 *  @RequestParam
	 *  - 파라이터 이름으로 바인딩
	 *  - name 속성이 파라미터 이름으로 사용
	 */
	@ResponseBody
	@RequestMapping("/request-param-v2")
	public String requestParamV2(@RequestParam("username") String username, @RequestParam("age") int age) throws IOException {
		
		System.out.println("username : " + username);
		System.out.println("age : " + age);
		
		return "ok";
		// @ResponseBody -> viewResolver를 무시하고 화면에 출력하겠다는 의미
	}
	
	/*
	 * @RequestParam 사용
	 * -Http 파라미터 이름이 변수 이름과 같으면
	 * @RequestParam("변수이름") 생략가능
	 * --------------------------------
	 * http://localhost:9090/request-param-v3?username=test2&age=25
	 * */
	@ResponseBody
	@RequestMapping("/request-param-v3")
	public String requestParamV3(@RequestParam String username, @RequestParam int age) throws IOException {
		
		System.out.println("username : " + username);
		System.out.println("age : " + age);
		
		return "ok";
		// @ResponseBody -> viewResolver를 무시하고 화면에 출력하겠다는 의미
	}
	
	
	/*
	 * @RequestParam
	 * - String, int 등 단순 타입이면 @RequestParam 생략 가능
	 * - MVC 내부에서 required=false 를 적용한다.
	 * */
	@ResponseBody
	@RequestMapping("/request-param-v4")
	public String requestParamV4( String username, int age) throws IOException {
		
		System.out.println("username : " + username);
		System.out.println("age : " + age);
		
		return "ok";
		// @ResponseBody -> viewResolver를 무시하고 화면에 출력하겠다는 의미
	}
	
	/*
	 * required = true : 반드시 파라미터 값이 들어와야한다.
	 * 
	 * */
	
	@ResponseBody
	@RequestMapping("/request-param-required")
	public String requestParamRequired(@RequestParam(required= true) String username,@RequestParam(required= false) int age) throws IOException {
		
		System.out.println("username : " + username);
		System.out.println("age : " + age);
		
		return "ok";
		// @ResponseBody -> viewResolver를 무시하고 화면에 출력하겠다는 의미
	}
	
	
}
