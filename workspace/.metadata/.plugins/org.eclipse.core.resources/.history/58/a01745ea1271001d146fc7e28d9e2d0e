package com.koreait.mylogin.loginweb.login;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.koreait.mylogin.loginweb.member.Member;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class LoginController {

	private final LoginService loginService;
	
	// login/loginForm
	// loginForm.html -> thymeleaf적용
	
	@GetMapping("/login")
	public String loginForm(@ModelAttribute("loginForm") LoginForm loginForm ) {
		return "login/loginForm";
	}
	
	@PostMapping("/login")
	public String login(@ModelAttribute LoginForm form, Model model, RedirectAttributes redirectAttributes, HttpServletResponse response) {
		
		Member loginMember =  loginService.login(form.getLoginId(), form.getPassword());
		
		if(loginMember == null) {
			//로그인 실패
			model.addAttribute("msg","로그인 실패");
			return "login/loginForm";
		}
		
		/*
		 * - addAttribute : url 뒤에 붙는다.
		 * - addFlashAttribute : url뒤에 붙지 않는다. ->내부의 모델로 전달되기 때문에 1회성
		 * */
		// 로그인 성공
		Cookie idCookie = new Cookie("memberId", String.valueOf(loginMember.getLoginId()));
		response.addCookie(idCookie);
		redirectAttributes.addFlashAttribute("msg","로그인 성공");
		return "redirect:/";
	}
}
