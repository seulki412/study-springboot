1. 리터럴(Literals)
	- 리터럴은 소스 코드상에 고정된 값을 말하는 용어이다.
	- "Hello"는 문자 리터럴, 10, 20 은 숫자 리터럴이다.
	- 문자 : 'hello'
	  숫자 : 10
	  불린 : true, false
	  null : null
	- 타임리프에서 문자 리터럴은 항상 ''(작은 따옴표)로 감싸야 한다.
		<span th:text="'hello'">
	- 공백없이 쭉 이어지는 하나의 리터럴은 작은따옴표를 생략할 수 있다.
		<span th:text="hello"> 		-> 인식가능
		<span th:text="hello world!">	-> 오류
		<span th:text="'hello world!'"> 	-> 인식 가능


2. 연산
	- 비교연산 : HTML 태그 주의
	- >(gt/&gt;), <(lt), >=(ge), <=(le), !(not), ==(eq), !=(neq, ne) 
		gt : 비교연산자
		&gt; -> html에서 사용

	- 조건식
	- Elvis 연산자
	

3. 속성 값 설정
	- th:* 로 속성을 적용하면 기존 속성을 대체한다.
	- 기존 속성이 없으면 새로 만든다.


4. 반복 상태 유지
<tr th:each="user, userStat : ${users}">

	- 반복의 두번째 파라미터를 설정해서 반복의 상태를 확인할 수 있다.
	- 두번째 파라미터는 생략 가능한데, 생략하면 지정한 변수명(user) + Stat
		여기서는 user + Stat = userStat
	- userStat
		-> index 		: 0부터 시작하는 값
		-> count 		: 1부터 시작하는 값
		-> size 		: 전체 사이즈
		-> even, odd 	: 홀, 짝 여부(boolean)
		-> first, last 		: 처음, 마지막 여부(boolean)
		-> current 		: 현재 객체 



5. 조건부 평가
	- if, unless(if의 반대 -> false라면)
	- 타임리프는 해당 조건이 맞지 않으면 태그자체를 렌더링 하지 않는다.


6. 블록
<th:block>은 HTML태그가 아닌 타임리프의 유일한 자체 태그이다.


7. 자바스크립트 인라인
	- 타임리프는 자바스크립트에서 타임리프를 편하게 사용할 수 있는 자바스크립트 인라인 기능을 제공한다.

	<script th:inline="javascript">


8. 템플릿 레이아웃



**com.koreait.item
	spring web, lombok, tymeleaf



9. @postContruct
	- 객체의 초기화 부분
	- 객체가 생성된 후 별도의 초기화 작업을 위해 실행하는 메소드를 선언한다.
	- WAS가 띄워질 때 실행된다.

10. @PreDestroy
	- 마지막 소멸 단계
